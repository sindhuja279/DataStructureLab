#include <stdio.h>

int binary_search(int* nums, int nums_length, int target, int find_first) {
    int left = 0;
    int right = nums_length - 1;

    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (nums[mid] == target) {
            if (find_first) {
                if (mid == 0 || nums[mid - 1] != target) {
                    return mid;
                } else {
                    right = mid - 1;
                }
            } else {
                if (mid == nums_length - 1 || nums[mid + 1] != target) {
                    return mid;
                } else {
                    left = mid + 1;
                }
            }
        } else if (nums[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }

    return -1;
}

int* searchRange(int* nums, int nums_length, int target, int* return_size) {
    *return_size = 2;
    int* result = (int*)malloc(sizeof(int) * 2);

    result[0] = binary_search(nums, nums_length, target, 1);
    result[1] = binary_search(nums, nums_length, target, 0);

    return result;
}
